version: '3'
services:
  frontend:
    image: node:18
    working_dir: /app
    volumes:
      - ./frontend:/app
    environment:
      NODE_ENV: development
    ports:
      - "8080"
    command: 
      - /bin/sh
      - -c
      - |
        npm install
        npm run dev -- --host
    networks:
      - lefts
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 4
      start_period: 10s

  backend:
    depends_on:
      mongodb:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - lefts
    ports:
      - "5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 4
      start_period: 10s

  reverse-proxy:
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./configs/reverse-dev.conf:/etc/nginx/nginx.conf:ro
    networks:
      - lefts

  mongodb:
    image: mongo:latest
    ports:
      - "27017"
    networks:
      - lefts
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 4
      start_period: 10s
    volumes:
      - mongo-data:/data/db

networks:
  lefts:

volumes:
  mongo-data: